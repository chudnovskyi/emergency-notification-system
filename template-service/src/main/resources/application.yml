server:
  port: 0

spring:
  application:
    name: template-service
  datasource:
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5434/template
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        show_sql: false
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: emergency
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: com.example.recipient.dto.kafka
            value:
              default:
                type: com.example.template.dto.kafka.TemplateRecipientKafka
            use:
              type:
                headers: false
    partitions: 3
    topics:
      recipient-update: recipient-updated
      template-update: template-updated

services:
  recipient: recipient-service
  shortener: url-shortener

springdoc:
  api-docs:
    path: /template-service/api-docs

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 1
    metadataMap: # BUG: https://github.com/codecentric/spring-boot-admin/issues/134
      instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
